unit Model_Acesso;

interface
uses System.SysUtils, FireDAC.Stan.Param, System.Classes,
     Data.DB, Dialogs;

//funções
function Model_Acesso_ValidarUsuarioStatus(Usuario:string):boolean;
function Model_Acesso_ValidarUsuario(Usuario,Senha:string):boolean;

implementation

uses UDataModel, Model_Conexao;

function Model_Acesso_ValidarUsuarioStatus(Usuario:string):boolean;
begin
  Result := False;
  try
    AtivarConecao(1);
    try
      DataModel.QTemp.Close;
      DataModel.QTemp.SQL.Clear;
      DataModel.QTemp.SQL.Text := 'SELECT usu_status FROM tb_usuario WHERE usu_usuario=:usu_usuario ';
      DataModel.QTemp.ParamByName('usu_usuario').AsString := Usuario;
      DataModel.QTemp.Open;

      if (DataModel.QTemp.fieldValues['usu_status'].AsInteger = 1) then
          result:=true

    except
      on E: Exception do
        begin
          ShowMessage('Ocorreu um erro ao verificar status do usuário!' + sLineBreak + E.Message);
          Abort;
        end;
    end;
  finally
    DataModel.QTemp.close;
    AtivarConecao(2);
  end;
end;

function Model_Acesso_ValidarUsuario(Usuario,Senha:string):boolean;
begin
  Result := False;
  try
    AtivarConecao(1);
    try
      DataModel.QTemp.Close;
      DataModel.QTemp.SQL.Clear;
      DataModel.QTemp.SQL.Text := 'SELECT usu_usuario, usu_senha FROM tb_usuario '
      +'WHERE usu_usuario=:usu_usuario and usu_senha=:usu_senha';
      DataModel.QTemp.ParamByName('usu_usuario').AsString := Usuario;
      DataModel.QTemp.ParamByName('usu_senha').AsString   := senha;
      DataModel.QTemp.Open;

      if not(DataModel.QTemp.IsEmpty) then
          result:=true

    except
      on E: Exception do
        begin
          ShowMessage('Ocorreu um erro ao verificar acesso do usuário,verifique seu Usuário/Senha!.' + sLineBreak + E.Message);
          abort;
        end;
    end;
  finally
    DataModel.QTemp.close;
    AtivarConecao(2);
  end;


end;

end.
