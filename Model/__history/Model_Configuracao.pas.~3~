unit Model_Configuracao;

interface
uses System.SysUtils, FireDAC.Stan.Param, System.Classes,
     Data.DB, Dialogs;

type
   RConfiguracao = record
   idREG:integer;
   registro:string;
   end;

//funções

//Procedures
procedure Model_GravarConfiguracao(id:integer;Configuracao:string;campo:integer);
procedure Model_PreencherCampos(id:integer);

implementation

uses UDataModel, Model_Conexao;

procedure Model_GravarConfiguracao(id:integer;Configuracao:string;campo:integer);
begin

  try
    AtivarConecao(1);
    try
      DataModel.QTemp.Close;
      DataModel.QTemp.SQL.Clear;
      case campo of
      1:begin
        DataModel.QTemp.SQL.Text := 'UPDATE tb_configuracao set con_local_foto=:con_local_foto '+
        'WHERE idconfiguracao=:idconfiguracao ';
        DataModel.QTemp.ParamByName('con_local_foto').AsString  := Configuracao;
        DataModel.QTemp.ParamByName('idconfiguracao').AsInteger := id;
      end;

      end;
      DataModel.QTemp.ExecSQL;


    except
      on E: Exception do
        begin
          ShowMessage('Ocorreu um erro ao atualizar registro!' + sLineBreak + E.Message);
          Abort;
        end;
    end;
  finally
    AtivarConecao(2);
  end;
end;

procedure Model_PreencherCampos(id:integer);
begin

  try
    AtivarConecao(1);
    try
      DataModel.QTemp.Close;
      DataModel.QTemp.SQL.Clear;
      DataModel.QTemp.SQL.Text := 'select idconfiguracao,con_local_foto from tb_configuracao '+
      'WHERE idconfiguracao=:idconfiguracao ';
      DataModel.QTemp.ParamByName('idconfiguracao').AsInteger := id;
      DataModel.QTemp.open();


      RConfiguracao.idREG:=DataModel.QTemp.FieldByName('idconfiguracao').AsInteger;
      TConfiguracao.registro:=DataModel.QTemp.FieldByName('con_local_foto').AsString;



    except
      on E: Exception do
        begin
          ShowMessage('Ocorreu um erro ao atualizar registro!' + sLineBreak + E.Message);
          Abort;
        end;
    end;
  finally
    AtivarConecao(2);
  end;
end;

end.
